#!/bin/bash

info() {
    if [[ ! $be_quiet ]]; then
        printf "\33[34m${1}\33[0m"
    fi
}

success() {
    if [[ ! $be_quiet ]]; then
        printf "\33[32m${1}\33[0m\n"
    fi
}

error() {
    printf "\33[31m${1}\33[0m\n"
}

# Check for command line arguments.
for arg in $@
do
    case $arg in
        -h|--help)
            printf "Usage: $(basename "$0") [options]\n"
            printf "\n"
            printf "Options:\n"
            printf " -h, --help     Display this information.\n"
            printf " -q, --quiet    Be quiet; don't output any information but errors.\n"
            printf " -S, --no-sync  Don't sync local repo with remote.\n"
            printf " -V, --verbose  Be verbose.\n"
            printf "\n"
            printf "For more information, please see: <https://github.com/jacobvaneijk/dotfiles>.\n"
            printf "\n"
            printf "Copyright (c) Jacob van Eijk\n"
            exit
        ;;

        -q|--quiet)
            be_quiet=true
        ;;

        -S|--no-sync)
            no_sync=true
        ;;

        -V|--verbose)
            be_verbose=true
        ;;

        -*|--*)
            error "Unrecognized argument \"${arg}\"."
        ;;
    esac
done

# Set $XDG_CONFIG_HOME it isn't set.
if [[ -z "${XDG_CONFIG_HOME}" ]]; then
    XDG_CONFIG_HOME="${HOME}/.config"
fi

# Check if the dotfiles repository exists. If so, change directory into it.
if [[ -d "${HOME}/.dotfiles" ]]; then
    cd ${HOME}/.dotfiles
else
    error "Couldn't find the dotfiles directory. Did you clone the dotfiles repository into ${HOME}/.dotfiles?"
fi

# Sync with the remote repository.
if [[ ! $no_sync ]]; then
    info "Syncing with the remote Git repository..."

    if [[ $be_verbose ]]; then
	printf "\n"
	git pull -r origin master
    else
        git pull -r origin master &> /dev/null
    fi

    if [[ $? -eq 0 ]]; then
        success "OK."
    else
        error "FAILED."
    fi
fi

info "Creating symbolic links..."

# For each directory in the dotfiles directory...
for dir in $(find * -maxdepth 0 -type d -not -path bin);
do
    # ...create a symbolic link in $XDG_CONFIG_HOME.
    if [[ $be_verbose ]]; then
        printf "\n"
        ln -fs "${HOME}/.dotfiles/${dir}" "${XDG_CONFIG_HOME}/${dir}"
    else
        ln -fs "${HOME}/.dotfiles/${dir}" "${XDG_CONFIG_HOME}/${dir}" &> /dev/null
    fi
done

if [[ $? -eq 0 ]]; then
    success "OK."
else
    error "FAILED."
fi

# Return to the original directory.
cd $OLDPWD
